name: Deploy to Firebase & Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Create .env file
        run: |
          cd frontend
          echo "VUE_APP_FIREBASE_API_KEY=${{ secrets.VUE_APP_FIREBASE_API_KEY }}" >> .env
          echo "VUE_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.VUE_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VUE_APP_FIREBASE_PROJECT_ID=${{ secrets.VUE_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "VUE_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.VUE_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VUE_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VUE_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VUE_APP_FIREBASE_APP_ID=${{ secrets.VUE_APP_FIREBASE_APP_ID }}" >> .env
          echo "VUE_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.VUE_APP_FIREBASE_MEASUREMENT_ID }}" >> .env

      - name: Build Vue app
        run: |
          cd frontend
          npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_IMYOURTUTOR_EC4EB }}'
          projectId: imyourtutor-ec4eb
          channelId: live
          entryPoint: frontend

  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          cd backend
          chmod +x gradlew
          ./gradlew build -x test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable required APIs
        run: |
          gcloud services enable run.googleapis.com
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable cloudbuild.googleapis.com

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          cd backend
          docker build -t gcr.io/imyourtutor-ec4eb/backend:${{ github.sha }} .
          docker push gcr.io/imyourtutor-ec4eb/backend:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy imyourtutor-backend \
            --image gcr.io/imyourtutor-ec4eb/backend:${{ github.sha }} \
            --platform managed \
            --region asia-northeast3 \
            --allow-unauthenticated \
            --set-env-vars="FRONTEND_URL=https://imyourtutor-ec4eb.web.app"